name: Build, Push Docker & Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  SSH_PORT: 5019
  CONTAINER_NAME: react-app
  DOCKER_IMAGE: aman694/ci-cid-react

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          keep_files: false

  deploy-to-server:
    needs: docker
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Verify Network Connectivity
        run: |
          ping -c 3 ${{ secrets.SSH_HOST }} || echo "Ping failed"
          nc -zv -w 5 ${{ secrets.SSH_HOST }} ${{ env.SSH_PORT }} || echo "Port test failed"

      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          config: |
            Host deploy-target
              HostName ${{ secrets.SSH_HOST }}
              User ${{ secrets.SSH_USER }}
              Port ${{ env.SSH_PORT }}
              StrictHostKeyChecking no
              ConnectTimeout 30
              ServerAliveInterval 60

      - name: Deploy to Server
        run: |
          ssh deploy-target \
            "docker pull ${{ env.DOCKER_IMAGE }}:latest && \
             docker stop ${{ env.CONTAINER_NAME }} || true && \
             docker rm ${{ env.CONTAINER_NAME }} || true && \
             docker run -d \
               --name ${{ env.CONTAINER_NAME }} \
               -p ${{ env.SSH_PORT }}:${{ env.SSH_PORT }} \
               -e NODE_ENV=production \
               --restart unless-stopped \
               ${{ env.DOCKER_IMAGE }}:latest"
        timeout-minutes: 5

      - name: Verify Deployment
        run: |
          curl -sSf --retry 3 --retry-delay 5 \
            http://${{ secrets.SSH_HOST }}:${{ env.SSH_PORT }} || \
            echo "Deployment verification failed"